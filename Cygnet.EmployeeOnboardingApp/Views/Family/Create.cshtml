@*@model Cygnet.EmployeeOnboardingApp.Domain.ViewModel.FamilyViewModel*@
@model Cygnet.EmployeeOnboardingApp.Domain.ViewModel.FamilyViewModel



@{
    ViewBag.Title = "FamilyDetails";
}

@*<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>*@

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Family</h4>
            @Html.HiddenFor(model => model.UserId)
            <hr />
          
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Relation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Relation",new List<SelectListItem>
               {
                   new SelectListItem{Text="Father",Value="Father"},
                    new SelectListItem{Text="Mother",Value="Mother"},
                     new SelectListItem{Text="Brother",Value="Brother"},
                     new SelectListItem{Text="Sister",Value="Sister"},
                     new SelectListItem{Text="Spouse",Value="Spouse"},
                     new SelectListItem{Text="Children",Value="Children"}
               },"Select Relationship", new { htmlAttributes = new {@class="dropdown-menu"}})
                    @*//@Html.EditorFor(model => model.Relation, new { htmlAttributes = new { @class = "form-control" } })*@
                    @*@Html.DropDownList("Relation", Model.Relations)*@
                    @Html.ValidationMessageFor(model => model.Relation, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Occupation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Occupation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Occupation, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Aadhar_No, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Aadhar_No, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Aadhar_No, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Residing_tog, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Residing_tog, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Residing_tog, "", new { @class = "text-danger" })
                </div>
            </div>

         


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
    }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="button" value="Save and Continue" class="btn btn-default" onclick="location.href='@Url.Action("Index","Education")'" />
                </div>
            </div>

    @*</body>
</html>*@
